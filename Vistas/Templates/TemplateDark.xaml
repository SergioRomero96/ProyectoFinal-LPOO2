<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--Estilos Bases-->
    <Style x:Key="StyleBaseButton" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontFamily" Value="Microsoft Tai Le"/>
        <Setter Property="Foreground" Value="white"/>
        <Setter Property="Focusable" Value="False"/>
    </Style>

    <Style x:Key="StyleBaseBorder" TargetType="{x:Type Border}">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="35" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="Padding" Value="15,10,15,10" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Black" />
    </Style>

    <Style x:Key="StyleBaseBorderMenu" TargetType="{x:Type Border}">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Padding" Value="10,0,0,0" />
    </Style>

    <Style x:Key="StyleBaseMenu" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="45"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Padding" Value="10,0,0,0"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <!--ESTILO TEXTBLOCK MENU LATERAL-->
    <Style x:Key="StyleTextBlockMenu" TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="160"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground" Value="#E0E0E0"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
    </Style>

    <!--ESTILO BOTON MENU MOBILE-->
    <ControlTemplate x:Key="TemplateBtnResponsive" TargetType="{x:Type Button}">
        <Border Width="Auto" Height="Auto" Background="{TemplateBinding Background}"
                CornerRadius="5">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>
    </ControlTemplate>

    <Style x:Key="StyleBtnMenu" TargetType="{x:Type Button}">
        <Setter Property="Template" Value="{StaticResource TemplateBtnResponsive}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="45"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Focusable" Value="False"/>
    </Style>


    <!--ESTILO BOTONES MENU LATERAL-->
    <ControlTemplate x:Key="TemplateBtnMenu" TargetType="{x:Type Button}">
        <Border Style="{StaticResource StyleBaseBorderMenu}" Background="{TemplateBinding Background}">
            <ContentPresenter
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">
            </ContentPresenter>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#3D8DE2"></Setter>
            </Trigger>
            <!--<Trigger Property="IsFocused" Value="True">
                <Setter Property="Background"  Value="#1E282C"/>
            </Trigger>-->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.25"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="TemplateBtnMenuDropdown" TargetType="{x:Type Button}">
        <Border Style="{StaticResource StyleBaseBorderMenu}" Background="{TemplateBinding Background}">
            <ContentPresenter
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">
            </ContentPresenter>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#3D8DE2"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background"  Value="#1E282C"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="TemplateBtnSubMenu" TargetType="{x:Type Button}">
        <Border Style="{StaticResource StyleBaseBorderMenu}" Background="{TemplateBinding Background}">
            <ContentPresenter
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">
            </ContentPresenter>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#71ACEA"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background"  Value="#1E282C"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="StyleBtnAzul"  TargetType="{x:Type Button}" BasedOn="{StaticResource StyleBaseMenu}">
        <Setter Property="Template" Value="{StaticResource TemplateBtnMenu}"/>
    </Style>

    <Style x:Key="StyleBtnMenuDropdown"  TargetType="{x:Type Button}" BasedOn="{StaticResource StyleBaseMenu}">
        <Setter Property="Template" Value="{StaticResource TemplateBtnMenuDropdown}"/>
        <Setter Property="Focusable" Value="False"/>
    </Style>

    <Style x:Key="StyleBtnSubMenu"  TargetType="{x:Type Button}" BasedOn="{StaticResource StyleBaseMenu}">
        <Setter Property="Template" Value="{StaticResource TemplateBtnSubMenu}"/>
        <Setter Property="Focusable" Value="False"/>
    </Style>


    <!--BUTTON STYLE PRIMARY-->
    <ControlTemplate x:Key="TemplateBtnPrimary" TargetType="{x:Type Button}" >
        <Border Style="{StaticResource StyleBaseBorder}" Background="{TemplateBinding Background}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#0069D9"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#3D8DE2"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style x:Key="StyleBtnPrimary" TargetType="{x:Type Button}" BasedOn="{StaticResource StyleBaseButton}">
        <Setter Property="Template" Value="{StaticResource TemplateBtnPrimary}"/>
        <Setter Property="Background" Value="#007BFF"/>
    </Style>


    <!--BUTTON STYLE SECONDARY-->
    <ControlTemplate x:Key="TemplateBtnSecondary" TargetType="{x:Type Button}" >
        <Border Style="{StaticResource StyleBaseBorder}" Background="{TemplateBinding Background}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#5A6268"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#91969A"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style x:Key="StyleBtnSecondary" TargetType="{x:Type Button}" BasedOn="{StaticResource StyleBaseButton}">
        <Setter Property="Template" Value="{StaticResource TemplateBtnSecondary}"/>
        <Setter Property="Background" Value="#6C757D"/>
    </Style>

    <!--ESTILO BOTON WARNING-->
    <ControlTemplate x:Key="TemplateBtnWarning" TargetType="{x:Type Button}">
        <Border Style="{StaticResource StyleBaseBorder}" Background="{TemplateBinding Background}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#ba8b00"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#ba8b00"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="StyleBtnWarning" TargetType="{x:Type Button}" BasedOn="{StaticResource StyleBaseButton}">
        <Setter Property="Template" Value="{StaticResource TemplateBtnWarning}"/>
        <Setter Property="Background" Value="#ffc107"/>
    </Style>

    <!--ESTILO BOTON DANGER-->
    <ControlTemplate x:Key="TemplateBtnRed" TargetType="{x:Type Button}">
        <Border Style="{StaticResource StyleBaseBorder}" Background="{TemplateBinding Background}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#b71c1c"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#d32f2f"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="StyleBtnRed" TargetType="{x:Type Button}" BasedOn="{StaticResource StyleBaseButton}">
        <Setter Property="Template" Value="{StaticResource TemplateBtnRed}"/>
        <Setter Property="Background" Value="#c62828"/>
    </Style>


    <!-- ESTILO BOTON SUCCESS-->
    <ControlTemplate x:Key="TemplateBtnGreed" TargetType="{x:Type Button}">
        <Border Style="{StaticResource StyleBaseBorder}" Background="{TemplateBinding Background}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#388e3c"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#4caf50"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="StyleBtnGreed" TargetType="{x:Type Button}" BasedOn="{StaticResource StyleBaseButton}">
        <Setter Property="Template" Value="{StaticResource TemplateBtnGreed}"/>
        <Setter Property="Background" Value="#43a047"/>
    </Style>

    <!--ESTILOS PARA DATAGRID-->
    <Style x:Key="StyleDataGrid" TargetType="{x:Type DataGrid}">
        <Setter Property="ColumnHeaderStyle" Value="{DynamicResource StyleColumHeader}"/>
        <Setter Property="CellStyle" Value="{DynamicResource StyleCell}"/>
        <Setter Property="Background" Value="#373D45"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="GridLinesVisibility" Value="Horizontal"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#262D35"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="HorizontalGridLinesBrush" Value="#FF262D35"/>
    </Style>

    <Style x:Key="StyleColumHeader" TargetType="DataGridColumnHeader">
        <Setter Property="Height" Value="37"/>
        <Setter Property="Background" Value="#262D35"/>
        <Setter Property="Foreground" Value="white"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="5,5,5,5"/>
    </Style>

    <Style x:Key="StyleCell" TargetType="DataGridCell">
        <Setter Property="HorizontalAlignment" Value="stretch"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="#373D45"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#0069D9"/>
            </Trigger>
        </Style.Triggers>

    </Style>
    <!--ESTILOS PARA DATAGRID-->


    <!--TEXTBOX -->
    <ControlTemplate x:Key="PlantillaTextBox" TargetType="{x:Type TextBox}">
        <Border 
          Name="border"
          CornerRadius="2" 
          BorderThickness="1" 
          BorderBrush="#A6A6A6"
          Width="Auto"
          Height="30">
            <!--El ControlTemplate de un TextBox debe contener exactamente 
            un elemento etiquetado como elemento que hospeda el contenido; 
            este elemento se utilizará para representar el contenido del TextBox. 
            Para etiquetar un elemento como host de contenido, se le asigna 
            el nombre especial PART_ContentHost. El elemento que hospeda el 
            contenido puede ser un ScrollViewer o un AdornerDecorator. 
            Dicho elemento no puede hospedar elementos secundarios.-->
            <ScrollViewer Margin="2" x:Name="PART_ContentHost"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="black"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="#007BFF"/>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--PASSWORDBOX -->
    <ControlTemplate x:Key="PlantillaPasswordBox" TargetType="{x:Type PasswordBox}">
        <Border 
          Name="border"
          CornerRadius="2" 
          BorderThickness="1" 
          BorderBrush="#A6A6A6"
          Width="Auto"
          Height="30">
            <ScrollViewer Margin="2" x:Name="PART_ContentHost"/>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="black"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="#007BFF"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="EstiloPasswordBox" TargetType="{x:Type PasswordBox}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontSize" Value="14"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="EstiloTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontSize" Value="14"/>

        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <ControlTemplate x:Key="PlantillaError" TargetType="{x:Type PasswordBox}">
        <Border 
          Name="border"
          CornerRadius="2" 
          BorderThickness="1" 
          BorderBrush="#A6A6A6"
          Width="Auto"
          Height="30">

            <ScrollViewer Margin="2" x:Name="PART_ContentHost"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="black"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="#007BFF"/>
            </Trigger>
            <Trigger  Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="#007BFF"/>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="EstiloError" TargetType="{x:Type TextBox}">
        <Setter Property="Template" Value="{StaticResource PlantillaError}"></Setter>
    </Style>


    <ControlTemplate x:Key="TemplateBtnGuardar" TargetType="{x:Type Button}" >
        <Border Style="{StaticResource StyleBaseBorder}" Background="{TemplateBinding Background}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#0069D9"/>
                <Setter Property="Foreground" Value="#FFD258"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#3D8DE2"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="StyleButtonGuardar" TargetType="{x:Type Button}" BasedOn="{StaticResource StyleBtnPrimary}">
        <Setter Property="Template" Value="{StaticResource TemplateBtnGuardar}"/>
    </Style>

    <ControlTemplate x:Key="TemplateBtnCancelar" TargetType="{x:Type Button}" >
        <Border Style="{StaticResource StyleBaseBorder}" Background="{TemplateBinding Background}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#5A6268"/>
                <Setter Property="Foreground" Value="#FFD258"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#91969A"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="StyleButtonCancelar" TargetType="{x:Type Button}" BasedOn="{StaticResource StyleBtnSecondary}">
        <Setter Property="Template" Value="{StaticResource TemplateBtnCancelar}"/>
    </Style>

    <!--IdataErrorEstilo-->
    <ControlTemplate x:Key="txtIdataError">
        <DockPanel>
            <Image Source="../resources/alerta3.png" Width="17" Height="17" Margin="215,6,0,0"/>
        </DockPanel>
    </ControlTemplate>
    <!--IdataErrorEstilo-->
    <Style x:Key="EstiloTextBoxIdataError" TargetType="TextBox">
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Validation.ErrorTemplate"
                Value="{StaticResource txtIdataError}"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <Binding Path="(Validation.Errors)[0].ErrorContent"
                                 RelativeSource="{x:Static RelativeSource.Self}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="StyleAside" TargetType="DockPanel">
        <Setter Property="Background" Value="#1D2227"></Setter>
    </Style>

    <Style x:Key="StyleHeaderGestion" TargetType="DockPanel">
        <Setter Property="Background" Value="#373D45"/>
    </Style>
    <Style x:Key="StyleHeaderTitulo" TargetType="TextBlock">
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="35"/>
        <Setter Property="FontFamily" Value="Century Gothic"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="#E0E0E0"/>
    </Style>

    <Style x:Key="ImgGestion" TargetType="Image">
        <Setter Property="Width" Value="64"/>
        <Setter Property="Height" Value="64"/>
        <Setter Property="Margin" Value="0,0,20,0"/>
    </Style>

    <Style x:Key="imgGestionClientes" TargetType="Image" BasedOn="{StaticResource ImgGestion}">
        <Setter Property="Source" Value="/resources/clientes.png"/>
    </Style>

    <Style x:Key="imgGestionCiudades" TargetType="Image" BasedOn="{StaticResource ImgGestion}">
        <Setter Property="Source" Value="/resources/ciudad.png"/>
    </Style>

    <Style x:Key="imgGestionTerminales" TargetType="Image" BasedOn="{StaticResource ImgGestion}">
        <Setter Property="Source" Value="/resources/terminal.png"/>
    </Style>

    <Style x:Key="imgGestionUsuarios" TargetType="Image" BasedOn="{StaticResource ImgGestion}">
        <Setter Property="Source" Value="/resources/clientes.png"/>
    </Style>

    <Style x:Key="imgGestionAutoBus" TargetType="Image" BasedOn="{StaticResource ImgGestion}">
        <Setter Property="Source" Value="/resources/autobus.png"/>
    </Style>

    <Style x:Key="imgGestionPasajes" TargetType="Image" BasedOn="{StaticResource ImgGestion}">
        <Setter Property="Source" Value="/resources/pasaje.png"/>
    </Style>

    <Style x:Key="StyleBodyGestion" TargetType="Grid">
        <Setter Property="Background" Value="#40454C"/>
    </Style>

    <Style x:Key="StyleGBBusqueda" TargetType="GroupBox">
        <Setter Property="Height" Value="80"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="StyleLabel" TargetType="Label">
        <Setter Property="Foreground" Value="White"/>
    </Style>

</ResourceDictionary>